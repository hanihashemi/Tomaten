name: Android CI

on:
  pull_request:
    branches: [ development ]

jobs:
  test:
    name: 🧪 Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: ⚙️ Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: 🔐 Decode google-services.json
        run: |
          mkdir -p app
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json

      - name: 🔓 Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 🧪 Run unit tests
        run: ./gradlew test

      - name: 📊 Generate test coverage report
        run: ./gradlew jacocoTestReport

      - name: 📝 Add coverage comment to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.6.1
        if: github.event_name == 'pull_request'
        with:
          paths: |
            ${{ github.workspace }}/app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 60
          title: 📊 Test Coverage Report
          update-comment: true

      - name: 📦 Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: app/build/test-results/

      - name: 📦 Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: |
            app/build/reports/jacoco/
            app/build/reports/tests/

  lint:
    name: 🧹 Lint
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: ⚙️ Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: 🔐 Decode google-services.json
        run: |
          mkdir -p app
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json

      - name: 🔓 Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 🧹 Run Android Lint
        run: ./gradlew lint

      - name: ✏️ Run ktlint check
        run: ./gradlew ktlintCheck

      - name: 📦 Upload lint report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-reports
          path: app/build/reports/lint-results*.html