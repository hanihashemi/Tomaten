name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  claude-review:
    name: üîç Claude Code Review
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Focus only on changed lines in the PR
          focus_on_changes: true

          # Enable line-level comments on specific code that needs improvement
          comment_on_code: true

          direct_prompt: |
            Please review only the changed parts of this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage

            Focus specifically on the modified lines and their immediate context.
            Leave inline comments on specific lines that need improvement, have bugs, or could be optimized.
            Be constructive and helpful in your feedback.

            IMPORTANT: If you find any CRITICAL issues (security vulnerabilities, major bugs that could cause crashes or data loss, or architectural problems), start your comment with "CRITICAL:" to mark it as a failing condition.

          # Optional: Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
          use_sticky_comment: true

      - name: Check for Critical Issues
        if: steps.claude-review.outputs.comments != ''
        run: |
          # Check if any comments contain "CRITICAL:" prefix
          if echo "${{ steps.claude-review.outputs.comments }}" | grep -q "CRITICAL:"; then
            echo "‚ùå Critical issues found in code review!"
            echo "Please address the critical issues before merging."
            exit 1
          else
            echo "‚úÖ No critical issues found. Review completed successfully."
          fi

          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality

          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' &&
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}

          # Optional: Add specific tools for running tests or linting
          # allowed_tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"

          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')
